<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tmount.db.role.dao.ALoginroleRelMapper">
	<resultMap id="LoginRoleMap" type="com.tmount.db.role.dto.ALoginroleRel">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="staff_id" property="staffId" jdbcType="INTEGER" />
		<result column="role_code" property="roleCode" jdbcType="INTEGER" />
		<result column="role_name" property="roleName" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, staff_id, role_code
	</sql>
	<select id="selectByPrimaryKey" resultMap="LoginRoleMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from a_loginrole_rel
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from a_loginrole_rel
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.tmount.db.role.dto.ALoginroleRel">
		insert into a_loginrole_rel (id, staff_id, role_code
		)
		values (#{id,jdbcType=INTEGER}, #{staffId,jdbcType=INTEGER},
		#{roleCode,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.tmount.db.role.dto.ALoginroleRel">
		insert into a_loginrole_rel
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="staffId != null">
				staff_id,
			</if>
			<if test="roleCode != null">
				role_code,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="staffId != null">
				#{staffId,jdbcType=INTEGER},
			</if>
			<if test="roleCode != null">
				#{roleCode,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.tmount.db.role.dto.ALoginroleRel">
		update a_loginrole_rel
		<set>
			<if test="staffId != null">
				staff_id = #{staffId,jdbcType=INTEGER},
			</if>
			<if test="roleCode != null">
				role_code = #{roleCode,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.tmount.db.role.dto.ALoginroleRel">
		update a_loginrole_rel
		set staff_id = #{staffId,jdbcType=INTEGER},
		role_code = #{roleCode,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<insert id="insertALoginRoleRel" parameterType="com.tmount.db.role.dto.ALoginroleRel">
		insert into a_loginrole_rel (staff_id,role_code) values (
		 #{staffId,jdbcType=INTEGER},#{roleCode,jdbcType=INTEGER})
	</insert>

	<select id="selectALoginRoleRel" parameterType="java.lang.Integer"
		resultMap="LoginRoleMap">
		SELECT a.staff_id,a.role_code
		FROM a_loginrole_rel a,a_staff_info b
		WHERE
		a.staff_id = b.staff_id
		AND
		b.staff_id = #{staffId,jdbcType=INTEGER}
	</select>

	<delete id="deleteALoginRolRel" parameterType="java.lang.Integer">
		delete from a_loginrole_rel where staff_id = #{staffId,jdbcType=INTEGER}
	</delete>

	<delete id="deleteALoginRolRelByRoleCode" parameterType="java.lang.Integer">
		delete from a_loginrole_rel where role_code = #{roleCode,jdbcType=INTEGER}
	</delete>

	<select id="selectALoginRoleRelByStaffid" parameterType="java.lang.Integer"
		resultMap="LoginRoleMap">
		SELECT a.staff_id,a.role_code ,c.role_name
		FROM a_loginrole_rel a ,a_staff_info b,a_role_dict c
		WHERE a.staff_id=b.staff_id AND b.staff_id = #{staffId,jdbcType=INTEGER} AND a.role_code =
		c.role_code
	</select>

	<select id="selectALoginRoleRelByOpno" parameterType="String"
		resultMap="LoginRoleMap">
		SELECT a.staff_id,a.role_code ,c.role_name
		FROM a_loginrole_rel a ,a_staff_info b,a_role_dict c
		WHERE a.staff_id=b.staff_id AND b.op_no = #{opNo,jdbcType=VARCHAR} AND a.role_code = c.role_code
	</select>


	<select id="selectALoginRoleRelByRoleCode" parameterType="java.lang.Integer"
		resultMap="LoginRoleMap">
		SELECT staff_id FROM a_loginrole_rel WHERE role_code = #{roleCode,jdbcType=INTEGER}
	</select>
</mapper>