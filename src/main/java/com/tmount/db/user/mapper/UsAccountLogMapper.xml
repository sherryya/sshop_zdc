<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tmount.db.user.dao.UsAccountLogMapper" >
  <resultMap id="BaseResultMap" type="com.tmount.db.user.dto.UsAccountLog" >
    <id column="account_typeid" property="accountTypeid" jdbcType="INTEGER" />
    <id column="login_accept" property="loginAccept" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="function_code" property="functionCode" jdbcType="VARCHAR" />
    <result column="from_id" property="fromId" jdbcType="BIGINT" />
    <result column="change_value" property="changeValue" jdbcType="DOUBLE" />
    <result column="old_value" property="oldValue" jdbcType="DOUBLE" />
    <result column="new_value" property="newValue" jdbcType="DOUBLE" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="operate_desc" property="operateDesc" jdbcType="VARCHAR" />
    <result column="staff_id" property="staffId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    account_typeid, login_accept, user_id, function_code, from_id, change_value, old_value, 
    new_value, update_time, operate_desc, staff_id
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.tmount.db.user.dto.UsAccountLogKey" >
    select 
    <include refid="Base_Column_List" />
    from us_account_log
    where account_typeid = #{accountTypeid,jdbcType=INTEGER}
      and login_accept = #{loginAccept,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.tmount.db.user.dto.UsAccountLogKey" >
    delete from us_account_log
    where account_typeid = #{accountTypeid,jdbcType=INTEGER}
      and login_accept = #{loginAccept,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.tmount.db.user.dto.UsAccountLog" >
    insert into us_account_log (account_typeid, login_accept, user_id, 
      function_code, from_id, change_value, 
      old_value, new_value, update_time, 
      operate_desc, staff_id)
    values (#{accountTypeid,jdbcType=INTEGER}, #{loginAccept,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{functionCode,jdbcType=VARCHAR}, #{fromId,jdbcType=BIGINT}, #{changeValue,jdbcType=DOUBLE}, 
      #{oldValue,jdbcType=DOUBLE}, #{newValue,jdbcType=DOUBLE}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{operateDesc,jdbcType=VARCHAR}, #{staffId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tmount.db.user.dto.UsAccountLog" >
    insert into us_account_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountTypeid != null" >
        account_typeid,
      </if>
      <if test="loginAccept != null" >
        login_accept,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="functionCode != null" >
        function_code,
      </if>
      <if test="fromId != null" >
        from_id,
      </if>
      <if test="changeValue != null" >
        change_value,
      </if>
      <if test="oldValue != null" >
        old_value,
      </if>
      <if test="newValue != null" >
        new_value,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="operateDesc != null" >
        operate_desc,
      </if>
      <if test="staffId != null" >
        staff_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountTypeid != null" >
        #{accountTypeid,jdbcType=INTEGER},
      </if>
      <if test="loginAccept != null" >
        #{loginAccept,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="functionCode != null" >
        #{functionCode,jdbcType=VARCHAR},
      </if>
      <if test="fromId != null" >
        #{fromId,jdbcType=BIGINT},
      </if>
      <if test="changeValue != null" >
        #{changeValue,jdbcType=DOUBLE},
      </if>
      <if test="oldValue != null" >
        #{oldValue,jdbcType=DOUBLE},
      </if>
      <if test="newValue != null" >
        #{newValue,jdbcType=DOUBLE},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateDesc != null" >
        #{operateDesc,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        #{staffId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tmount.db.user.dto.UsAccountLog" >
    update us_account_log
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="functionCode != null" >
        function_code = #{functionCode,jdbcType=VARCHAR},
      </if>
      <if test="fromId != null" >
        from_id = #{fromId,jdbcType=BIGINT},
      </if>
      <if test="changeValue != null" >
        change_value = #{changeValue,jdbcType=DOUBLE},
      </if>
      <if test="oldValue != null" >
        old_value = #{oldValue,jdbcType=DOUBLE},
      </if>
      <if test="newValue != null" >
        new_value = #{newValue,jdbcType=DOUBLE},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operateDesc != null" >
        operate_desc = #{operateDesc,jdbcType=VARCHAR},
      </if>
      <if test="staffId != null" >
        staff_id = #{staffId,jdbcType=INTEGER},
      </if>
    </set>
    where account_typeid = #{accountTypeid,jdbcType=INTEGER}
      and login_accept = #{loginAccept,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tmount.db.user.dto.UsAccountLog" >
    update us_account_log
    set user_id = #{userId,jdbcType=BIGINT},
      function_code = #{functionCode,jdbcType=VARCHAR},
      from_id = #{fromId,jdbcType=BIGINT},
      change_value = #{changeValue,jdbcType=DOUBLE},
      old_value = #{oldValue,jdbcType=DOUBLE},
      new_value = #{newValue,jdbcType=DOUBLE},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      operate_desc = #{operateDesc,jdbcType=VARCHAR},
      staff_id = #{staffId,jdbcType=INTEGER}
    where account_typeid = #{accountTypeid,jdbcType=INTEGER}
      and login_accept = #{loginAccept,jdbcType=BIGINT}
  </update>
</mapper>